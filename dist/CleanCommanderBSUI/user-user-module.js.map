{"version":3,"sources":["./src/app/user/login/login.component.html","./src/app/user/login/login.component.ts","./src/app/user/user.module.ts","./src/app/user/user.routes.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;IAMM,qEAA6G;IAAA,mEAAQ;IAAA,4DAAK;;;IAM1H,qEAA6G;IAAA,mEAAQ;IAAA,4DAAK;;;IAU9H,0EAAqD;IAAA,8EAAmB;IAAA,4DAAM;;ACbzE,MAAM,cAAc;IAMzB,YAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QADpE,iBAAY,GAAG,KAAK,CAAC;IACmD,CAAC;IAEzE,QAAQ;IACR,CAAC;IAED,KAAK,CAAC,UAAU;QACd,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,UAAU,CAAC,QAAQ,EAAE,UAAU,CAAC,QAAQ,CAAC;aACjE,SAAS,CAAC,IAAI,CAAC,EAAE;YAChB,IAAI,CAAC,IAAI,EAAE;gBACT,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,iEAAgE;aAC1F;iBACI;gBACH,MAAM,KAAK,GAAS,IAAK,CAAC,KAAK,CAAC;gBAChC,YAAY,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;gBACnC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;aACrC;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;IACtC,CAAC;;4EA3BU,cAAc;8FAAd,cAAc;;QDT3B,qEAAI;QAAA,gEAAK;QAAA,4DAAK;QACd,gEAAI;QACJ,yEAAsB;QACpB,6EAAiF;QAAvD,sRAAY,oBAAsB,IAAC;QAC3D,yEAAwB;QACtB,2EAAsB;QAAA,qEAAU;QAAA,4DAAQ;QACxC,wGAA0H;QAC1H,4EACwC;QADnB,0JAAoB;QAAzC,4DACwC;QAC1C,4DAAM;QACN,0EAAwB;QACtB,4EAAsB;QAAA,qEAAS;QAAA,4DAAQ;QACvC,0GAA0H;QAC1H,4EACuC;QADlB,0JAAoB;QAAzC,4DACuC;QACzC,4DAAM;QACN,2EAA6E;QAAvE,oKAA6B,IAAI,IAAC,4GAA8B,KAAK,IAAnC;QACtC,8EAA6E;QAAA,iEAAK;QAAA,4DAAS;QAC7F,4DAAO;QACP,8EAAiE;QAAnB,uIAAS,YAAQ,IAAC;QAAC,kEAAM;QAAA,4DAAS;QAClF,4DAAO;QACP,iEAAK;QACL,6GAA8E;QAChF,4DAAM;;;QAjBK,0DAAsG;QAAtG,0OAAsG;QAMtG,0DAAsG;QAAtG,0OAAsG;QAK7D,0DAA8B;QAA9B,iFAA8B;QAK1E,0DAAkB;QAAlB,kFAAkB;;;;;;;;;;;;;;AErB1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACA;AACmB;AACvB;AACc;;;AAkBlD,MAAM,UAAU;;oEAAV,UAAU;yFAAV,UAAU;8FAFX,EAAE,YAPH;YACP,4DAAY;YACZ,4DAAY,CAAC,QAAQ,CAAC,uDAAU,CAAC;YACjC,0DAAW;YACX,kEAAmB;SACpB;mIAIU,UAAU,mBAZnB,qEAAc,aAId,4DAAY,gEAEZ,0DAAW;QACX,kEAAmB;;;;;;;;;;;;;AClBvB;AAAA;AAAA;AAAyD;AAElD,MAAM,UAAU,GAAG;IACtB,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAC;CAC7C","file":"user-user-module.js","sourcesContent":["<h1>Login</h1>\n<hr>\n<div class=\"col-md-4\">\n  <form #loginForm=\"ngForm\" (ngSubmit)=\"login(loginForm.value)\" autocomplete=\"off\">\n    <div class=\"form-group\">\n      <label for=\"userName\">User Name:</label>\n      <em *ngIf=\"loginForm.controls.userName?.invalid && (loginForm.controls.userName?.touched || mouseOverLogin)\">Required</em>\n      <input id=\"userName\" (ngModel)=\"userName\" name=\"userName\" type=\"text\" class=\"form-control\"\n        placeholder=\"User Name...\" required />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"password\">Password:</label>\n      <em *ngIf=\"loginForm.controls.password?.invalid && (loginForm.controls.password?.touched || mouseOverLogin)\">Required</em>\n      <input id=\"password\" (ngModel)=\"password\" name=\"password\" type=\"password\" class=\"form-control\"\n        placeholder=\"Password...\" required />\n    </div>\n    <span (mouseenter)=\"mouseOverLogin=true\" (mouseleave)=\"mouseOverLogin=false\">\n      <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"loginForm.invalid\">Login</button>\n    </span>\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"cancel()\">Cancel</button>\n  </form>\n  <br/>\n  <div *ngIf=\"loginInvalid\" class=\"alert alert-danger\">Invalid Login Info.</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/shared/services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  password\n  userName\n  mouseOverLogin: boolean\n  loginInvalid = false;\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  login(formValues) {\n    this.authService.loginUser(formValues.userName, formValues.password)\n      .subscribe(resp => {\n        if (!resp) {\n          this.loginInvalid = true;//Use this to show a message to the user, if their login failed.\n        }\n        else {\n          const token = (<any>resp).token;\n          localStorage.setItem(\"jwt\", token);\n          this.router.navigate(['platforms']);\n        }\n      });\n  }\n\n  cancel() {\n    this.router.navigate(['platforms']);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { userRoutes } from './user.routes';\nimport { LoginComponent } from './login/login.component';\n\n\n\n@NgModule({\n  declarations: [\n    LoginComponent\n  ],\n\n  imports: [\n    CommonModule,\n    RouterModule.forChild(userRoutes),\n    FormsModule,\n    ReactiveFormsModule\n  ],\n\n  providers:[]\n})\nexport class UserModule { }\n","import { LoginComponent } from \"./login/login.component\";\r\n\r\nexport const userRoutes = [\r\n    {path: 'login', component: LoginComponent}\r\n]"],"sourceRoot":"webpack:///"}